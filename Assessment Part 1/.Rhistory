#now count the points in that fall in a 6 x 6 grid overlaid across the window
plot(quadratcount(BluePlaquesSub.ppp, nx = 6, ny = 6),add=T,col="red")
Qcount<-data.frame(quadratcount(BluePlaquesSub.ppp, nx = 6, ny = 6))
View(Qcount)
QCountTable <- data.frame(table(Qcount$Freq, exclude=NULL))
View(QCountTable)
table(Qcount$Freq, exclude=NULL)
QCountTable <- QCountTable[-nrow(QCountTable),]
#check the data type in the first column - if it is factor, we will need to convert it to numeric
class(QCountTable[,1])
vect<- as.numeric(levels(QCountTable[,1]))
vect <- vect[1:6]
QCountTable[,1] <- vect
class(QCountTable[,1])
#calculate the total blue plaques (Var * Freq)
QCountTable$total <- QCountTable[,1]*QCountTable[,2]
#calculate mean
sums <- colSums(QCountTable[,-1])
sums
#and now calculate our mean Poisson parameter (lambda)
lambda <- sums[2]/sums[1]
QCountTable$Pr <- ((lambda^QCountTable[,1])*exp(-lambda))/factorial(QCountTable[,1])
QCountTable$Expected <- round(QCountTable$Pr * sums[1],0)
QCountTable
#Compare the frequency distributions of the observed and expected point patterns
plot(c(1,5),c(0,14), type="n", xlab="Number of Blue Plaques (Red=Observed, Blue=Expected)", ylab="Frequency of Occurances")
points(QCountTable$Freq, col="Red", type="o", lwd=3)
points(QCountTable$Expected, col="Blue", type="o", lwd=3)
teststats <- quadrat.test(BluePlaquesSub.ppp, nx = 6, ny = 6)
View(teststats)
teststats
plot(BluePlaquesSub.ppp,pch=16,cex=0.5, main="Blue Plaques in Harrow")
plot(teststats, add=T, col = "red")
window <- as.owin(Borough)
plot(window)
library(spatstat)
library(sp)
library(rgeos)
library(maptools)
library(GISTools)
library(tmap)
library(sf)
library(geojsonio)
library(tmaptools)
window <- as.owin(Borough)
plot(window)
plot(BluePlaquesSub.ppp,pch=16,cex=0.5, main="Blue Plaques Harrow")
plot(density(BluePlaquesSub.ppp, sigma = 500))
plot(density(BluePlaquesSub.ppp, sigma = 1000))
plot(BluePlaquesSub.ppp,pch=16,cex=0.5, main="Blue Plaques in Harrow")
plot(quadratcount(BluePlaquesSub.ppp, nx = 6, ny = 6),add=T,col="red")
Qcount<-data.frame(quadratcount(BluePlaquesSub.ppp, nx = 6, ny = 6))
View(Qcount)
View(QCountTable)
QCountTable <- data.frame(table(Qcount$Freq, exclude=NULL))
QCountTable <- QCountTable[-nrow(QCountTable),]
#check the data type in the first column - if it is factor, we will need to convert it to numeric
class(QCountTable[,1])
vect<- as.numeric(levels(QCountTable[,1]))
QCountTable[,1] <- vect
vect<- as.numeric(levels(QCountTable[,1]))
vect <- vect[1:6]
QCountTable[,1] <- vect
class(QCountTable[,1])
QCountTable$total <- QCountTable[,1]*QCountTable[,2]
sums <- colSums(QCountTable[,-1])
sums
lambda <- sums[2]/sums[1]
QCountTable$Pr <- ((lambda^QCountTable[,1])*exp(-lambda))/factorial(QCountTable[,1])
QCountTable$Expected <- round(QCountTable$Pr * sums[1],0)
plot(c(1,5),c(0,14), type="n", xlab="Number of Blue Plaques (Red=Observed, Blue=Expected)", ylab="Frequency of Occurances")
points(QCountTable$Freq, col="Red", type="o", lwd=3)
points(QCountTable$Expected, col="Blue", type="o", lwd=3)
teststats <- quadrat.test(BluePlaquesSub.ppp, nx = 6, ny = 6)
teststats
plot(BluePlaquesSub.ppp,pch=16,cex=0.5, main="Blue Plaques in Harrow")
plot(teststats, add=T, col = "red")
K <- Kest(BluePlaquesSub.ppp, correction="border")
plot(K)
library(raster)
library(fpc)
library(plyr)
library(OpenStreetMap)
install.packages("fpc")
crs(Borough)
BluePlaquesSubPoints <- data.frame(BluePlaquesSub@coords[,1:2])
View(BluePlaquesSubPoints)
db <- fpc::dbscan(BluePlaquesSubPoints, eps = 700, MinPts = 4)
plot(db, BluePlaquesSubPoints, main = "DBSCAN Output", frame = F)
plot(Borough, add=T)
View(db)
db$cluster
BluePlaquesSubPoints$cluster <- db$cluster
chulls <- ddply(BluePlaquesSubPoints, .(cluster), function(df) df[chull(df$coords.x1, df$coords.x2), ])
View(chulls)
dbplot <- ggplot(data=BluePlaquesSubPoints, aes(coords.x1,coords.x2, colour=cluster, fill=cluster))
library(ggplot2)
dbplot <- ggplot(data=BluePlaquesSubPoints, aes(coords.x1,coords.x2, colour=cluster, fill=cluster))
dbplot <- ggplot(data=BluePlaquesSubPoints, aes(coords.x1,coords.x2, colour=cluster, fill=cluster))
dbplot <- dbplot + geom_point()
dbplot <- dbplot + geom_polygon(data = chulls, aes(coords.x1,coords.x2, group=cluster), alpha = 0.5)
dbplot + theme_bw() + coord_equal()
chulls <- subset(chulls, cluster>=1)
dbplot <- ggplot(data=BluePlaquesSubPoints, aes(coords.x1,coords.x2, colour=cluster, fill=cluster))
dbplot <- dbplot + geom_point()
dbplot <- dbplot + geom_polygon(data = chulls, aes(coords.x1,coords.x2, group=cluster), alpha = 0.5)
dbplot + theme_bw() + coord_equal()
latlong <- "+init=epsg:4326"
BoroughWGS <-spTransform(Borough, CRS(latlong))
BoroughWGS@bbox
basemap<-openmap(c(51.5530613,-0.4040719),c(51.6405318,-0.2671556), zoom=NULL,"stamen-toner")
basemap_bng<-openproj(basemap, projection=BNG)
autoplot(basemap_bng) +
geom_point(data=BluePlaquesSubPoints, aes(coords.x1,coords.x2, colour=cluster, fill=cluster)) +
geom_polygon(data = chulls, aes(coords.x1,coords.x2, group=cluster, fill=cluster), alpha = 0.5)
library(rgdal)
#read the ward data in
LondonWards <- readOGR("E:/UCL/GIS/wk6/LondonWardData/LondonWards.shp", layer="LondonWards")
proj4string(LondonWards) <- CRS("+init=epsg:27700")
tmap_mode("view")
tm_shape(LondonWards) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(BluePlaques) +
tm_dots(col = "blue")
LondonWards <- readOGR("E:/UCL/GIS/wk6/LondonWardData/LondonWards.shp", layer="LondonWards")
BNG = "+init=epsg:27700"
proj4string(LondonWards) <- CRS(BNG)
BluePlaques <- geojson_read("https://s3.eu-west-2.amazonaws.com/openplaques/open-plaques-london-2018-04-08.geojson", what = "sp")
BluePlaquesBNG <- spTransform(BluePlaques, BNG)
tmap_mode("view")
tm_shape(LondonWards) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(BluePlaques) +
tm_dots(col = "blue")
tmap_mode("view")
tm_shape(LondonWards) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(BluePlaquesBNG) +
tm_dots(col = "blue")
qtm(LondonWards)
tm_shape(LondonWards) +
tm_polygons(col = NA, alpha = 0.5)
tm_shape(LondonWards) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(BluePlaquesBNG) +
tm_dots(col = "blue")
qtm(BluePlaques)
summary(BluePlaques)
Sys.setlocale(category = "LC_ALL", locale = "uk")
BluePlaques <- geojson_read("https://s3.eu-west-2.amazonaws.com/openplaques/open-plaques-london-2018-04-08.geojson", what = "sp")
BluePlaquesBNG <- spTransform(BluePlaques, BNG)
tmap_mode("view")
tm_shape(LondonWards) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(BluePlaquesBNG) +
tm_dots(col = "blue")
tm_shape(LondonWards) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(BluePlaques) +
tm_dots(col = "blue")
BluePlaquesSub <- BluePlaquesBNG[LondonWards,]
tm_shape(LondonWards) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(BluePlaquesSub) +
tm_dots(col = "blue")
library(GISTools)
res <- poly.counts(BluePlaquesSub, LondonWards)
View(LondonWards)
LondonWards@data$BluePlaqueCount<-res
LondonWards@data$BlueDensity <- LondonWards$BluePlaqueCount/poly.areas(LondonWards)
LondonWards@data
LondonWards@data$BluePlaqueCount
LondonWards@data$BlueDensity
tm_shape(LondonWards) +
tm_polygons("BlueDensity",
style="jenks",
palette="PuOr",
midpoint=NA,
title="Blue Plaque Density")
library(spdep)
#First calculate the centroids of all Wards in London
coordsW <- coordinates(LondonWards)
plot(coordsW)
#create a neighbours list
LWard_nb <- poly2nb(LondonWards, queen=T)
plot(LWard_nb, coordinates(coordsW), col="red")
plot(LondonWards, add=T)
install.packages("spdep")
library(spdep)
#create a neighbours list
LWard_nb <- poly2nb(LondonWards, queen=T)
plot(LWard_nb, coordinates(coordsW), col="red")
plot(LondonWards, add=T)
#create a spatial weights object from these weights
Lward.lw <- nb2listw(LWard_nb, style="C")
head(Lward.lw$neighbours)
View(Lward.lw)
View(LWard_nb)
I_LWard_Global_Density <- moran.test(LondonWards@data$BlueDensity, Lward.lw)
I_LWard_Global_Density
C_LWard_Global_Density <- geary.test(LondonWards@data$BlueDensity, Lward.lw)
C_LWard_Global_Density
G_LWard_Global_Density <- globalG.test(LondonWards@data$BlueDensity, Lward.lw)
G_LWard_Global_Density
#use the localmoran function to generate I for each ward in the city
I_LWard_Local <- localmoran(LondonWards@data$BluePlaqueCount, Lward.lw)
I_LWard_Local_Density <- localmoran(LondonWards@data$BlueDensity, Lward.lw)
View(I_LWard_Local)
View(I_LWard_Local_Density)
I_LWard_Global_Density
C_LWard_Global_Density
View(C_LWard_Global_Density)
LondonWards@data$BLocI <- I_LWard_Local[,1]
LondonWards@data$BLocIz <- I_LWard_Local[,4]
LondonWards@data$BLocIR <- I_LWard_Local_Density[,1]
LondonWards@data$BLocIRz <- I_LWard_Local_Density[,4]
breaks1<-c(-1000,-2.58,-1.96,-1.65,1.65,1.96,2.58,1000)
MoranColours<- rev(brewer.pal(8, "RdGy"))
tm_shape(LondonWards) +
tm_polygons("BLocIRz",
style="fixed",
breaks=breaks1,
palette=MoranColours,
midpoint=NA,
title="Local Moran's I, Blue Plaques in London")
Gi_LWard_Local_Density <- localG(LondonWards@data$BlueDensity, Lward.lw)
LondonWards@data$BLocGiRz <- Gi_LWard_Local_Density
GIColours<- rev(brewer.pal(8, "RdBu"))
#now plot on an interactive map
tm_shape(LondonWards) +
tm_polygons("BLocGiRz",
style="fixed",
breaks=breaks1,
palette=GIColours,
midpoint=NA,
title="Gi*, Blue Plaques in London")
I_LWard_Local_GCSE <- localmoran(LondonWards@data$AvgGCSE201, Lward.lw)
LondonWards@data$GCSE_LocIz <- I_LWard_Local_GCSE[,4]
tm_shape(LondonWards) +
tm_polygons("GCSE_LocIz",
style="fixed",
breaks=breaks1,
palette=MoranColours,
midpoint=NA,
title="Local Moran's I, GCSE Scores")
#Now the Gi* statistic to look at clusters of high and low scores...
Gi_LWard_Local_GCSE <- localG(LondonWards@data$AvgGCSE201, Lward.lw)
LondonWards@data$GCSE_LocGiz <- Gi_LWard_Local_GCSE
tm_shape(LondonWards) +
tm_polygons("GCSE_LocGiz",
style="fixed",
breaks=breaks1,
palette=GIColours,
midpoint=NA,
title="Gi*, GCSE Scores")
LondonWards <- readOGR("E:/UCL/GIS/wk8/NewLondonWard/NewLondonWard.shp", layer="NewLondonWard")
library(tidyverse)
library(downloader)
library(rgdal)
library(sf)
library(ggplot2)
library(reshape2)
library(plotly)
library(highcharter)
install.packages("highcharter")
library(highcharter)
LondonWards <- readOGR("E:/UCL/GIS/wk8/NewLondonWard/NewLondonWard.shp", layer="NewLondonWard")
LondonWards <- readOGR("E:/UCL/GIS/wk8/NewLondonWard/NewLondonWard.shp", layer="NewLondonWard")
View(LondonWards)
LondonWardsSF <- st_as_sf(LondonWards)
View(LondonWardsSF)
extradata <- read_csv("https://www.dropbox.com/s/qay9q1jwpffxcqj/LondonAdditionalDataFixed.csv?raw=1")
View(extradata)
LondonWardsSF <- merge(LondonWardsSF, extradata, by.x = "WD11CD", by.y = "Wardcode")
View(LondonWardsSF)
lapply(LondonWardsSF, class)
cbind(lapply(LondonWardsSF, class))
list1 <- as.data.frame(cbind(lapply(LondonWardsSF, class)))
View(list1)
seq.int(nrow(list1))
cbind(list1, seq.int(nrow(list1)))
list1 <- cbind(list1, seq.int(nrow(list1)))
LondonSub <- LondonWardsSF[,c(1:73,83:86)]
View(LondonSub)
LondonSub2 <- st_set_geometry(LondonWardsSF[,c(1:3,9:27)],NULL)
LondonSub3 <- st_set_geometry(LondonWardsSF[,c(1:3,28:50)],NULL)
LondonSub4 <- st_set_geometry(LondonWardsSF[,c(1:3,51:73,85:86)],NULL)
View(LondonSub2)
LondonMelt2 <- melt(LondonSub2, id.vars = 1:3)
View(LondonMelt2)
attach(LondonMelt2)
hist2 <- ggplot(LondonMelt2, aes(x=value))
hist2 <- ggplot(LondonMelt2, aes(x=value)) +
geom_histogram(aes(y = ..density..))
hist2 <- ggplot(LondonMelt2, aes(x=value)) +
geom_histogram(aes(y = ..density..)) +
geom_density(colour="red", size=1, adjust=1)
hist2 <- ggplot(LondonMelt2, aes(x=value)) +
geom_histogram(aes(y = ..density..)) +
geom_density(colour="red", size=1, adjust=1)
hist2 + facet_wrap(~ variable, scales="free")
LondonMelt2 <- melt(LondonSub2, id.vars = 1:3)
attach(LondonMelt2)
??attach()
ggplot(LondonMelt2, aes(x=value))
ggplot(LondonMelt2, aes(x=value)) +
geom_histogram(aes(y = ..density..))
ggplot(LondonMelt2, aes(x=value)) +
geom_histogram(aes(y = ..density..)) +
geom_density(colour="red", size=1, adjust=1)
hist2 <- ggplot(LondonMelt2, aes(x=value)) +
geom_histogram(aes(y = ..density..)) +
geom_density(colour="red", size=1, adjust=1)
hist2 + facet_wrap(~ variable, scales="free")
# LondonSub3
LondonMelt3 <- melt(LondonSub3, id.vars = 1:3)
attach(LondonMelt3)
hist3 <- ggplot(LondonMelt3, aes(x=value)) +
geom_histogram(aes(y = ..density..)) +
geom_density(colour="red", size=1, adjust=1)
hist3 + facet_wrap(~ variable, scales="free")
# LondonSub4
LondonMelt4 <- melt(LondonSub4, id.vars = 1:3)
attach(LondonMelt4)
hist4 <- ggplot(LondonMelt4, aes(x=value)) +
geom_histogram(aes(y = ..density..)) +
geom_density(colour="red", size=1, adjust=1)
hist4 + facet_wrap(~ variable, scales="free")
# log10() transformation
hist5 <- ggplot(LondonMelt4, aes(x=log10(value))) +
geom_histogram(aes(y = ..density..)) +
stat_function(fun=dnorm, colour="red", size=1)
hist5 + facet_wrap(~ variable, scales="free")
View(LondonSub)
londonpoint<-ggplot(LondonSub, aes(x=x.y,y=y.y))+geom_point()+coord_equal()
londonpoint
londonpoint<-ggplot(LondonSub, aes(x=x.y,y=y.y))+stat_bin2d(bins=10)
londonpoint
londonpoint+stat_density2d(aes(fill = ..level..), geom="polygon")
londonpoint<-ggplot(LondonSub, aes(x=x.y,y=y.y))+geom_point()+coord_equal()
londonpoint+stat_density2d(aes(fill = ..level..), geom="polygon")
View(LondonWardsSF)
newvar<-0
recode<-function(variable,high,medium,low){
newvar[variable<=high]<-"High"
newvar[variable<=medium]<-"Medium"
newvar[variable<=low]<-"Low"
return(newvar)
}
attach(LondonWardsSF)
summary(AvgGCSE201)
LondonWards$GCSE_recode <- recode(AvgGCSE201,409.1,358.3,332.3)
LondonWardsSF$GCSE_recode <- recode(AvgGCSE201,409.1,358.3,332.3)
#Location Quotient function 1
LQ1<-function(pctVariable){
pctVariable /mean(pctVariable)
}
#Location Quotient function 2
LQ2<-function(variable,rowtotal){
localprop<-variable/rowtotal
globalprop<-sum(variable)/sum(rowtotal)
return(localprop/globalprop)
}
head(LondonWardsSF[,1:7])
View(list1)
library(tmap)
library(geojsonio)
#Load data
hunt <- geojson_read("https://www.dropbox.com/s/wa2ip35tcmt93g3/Team7.geojson?raw=1", what = "sp")
tmap_mode("view")
tm_shape(hunt) +
tm_lines(col = "green", lwd = 4)
library(tmap)
library(geojsonio)
#Load data
hunt <- geojson_read("https://www.dropbox.com/s/wa2ip35tcmt93g3/Team7.geojson?raw=1", what = "sp")
tmap_mode("view")
tm_shape(hunt) +
tm_lines(col = "green", lwd = 4)
View(hunt)
library(rgdal)
library(tidyverse)
tubestations <- readOGR("https://www.doogal.co.uk/LondonStationsKML.ashx", "London statio
ns with zone information")
huntaddresses <- read.csv("https://www.dropbox.com/s/2cbu2ux9ddy9c0l/huntaddresses.csv?raw=1")
tubestations <- readOGR("https://www.doogal.co.uk/LondonStationsKML.ashx", "London statio
ns with zone information")
huntaddresses <- read.csv("https://www.dropbox.com/s/2cbu2ux9ddy9c0l/huntaddresses.csv?raw=1")
library(tmap)
library(geojsonio)
library(rgdal)
library(tidyverse)
# Load Data
hunt <- geojson_read("https://www.dropbox.com/s/wa2ip35tcmt93g3/Team7.geojson?raw=1", what = "sp")
tubestations <- readOGR("https://www.doogal.co.uk/LondonStationsKML.ashx", "London statio
ns with zone information")
huntaddresses <- read.csv("https://www.dropbox.com/s/2cbu2ux9ddy9c0l/huntaddresses.csv?raw=1")
tmap_mode("view")
tm_shape(hunt) +
tm_lines(col = "green", lwd = 4)
setwd("D:/Documents/GitHub/GIS/Assessment Part 1")
library(spatstat)
library(sp)
library(rgeos)
library(maptools)
library(GISTools)
library(tmap)
library(geojsonio)
library(tmaptools)
# load Borough data
BoroughMap <- read_shape('LondonBorough/LondonBouroughs.shp',as.sf=FALSE)
summary(BoroughMap)
BNG = "+init=epsg:27700"
BoroughMapBNG <- spTransform(BoroughMap,BNG)
# load wifi data
LondonWifi <- read.csv("London_Wifi.csv", header = T, sep = ",")
coordinates(LondonWifi) <- ~latitude + longitude
proj4string(LondonWifi) = CRS("+init=epsg:4326")
WifiBNG <- spTransform(LondonWifi,BNG)
WifiBNG <- remove.duplicates(WifiBNG)
WifiBNG <- WifiBNG[BoroughMapBNG,]
# quick plot
tmap_mode("view")
tm_shape(BoroughMapBNG) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(WifiBNG) +
tm_dots(col = "blue")
# now set a window as the borough boundary
window <- as.owin(BoroughMapBNG)
plot(window)
# create a point pattern (ppp) object.
Wifi.ppp <- ppp(x=WifiBNG@coords[,1],y=WifiBNG@coords[,2],window=window)
plot(Wifi.ppp,pch=16,cex=0.5, main="London Wifi")
plot(density(Wifi.ppp,sigma = 2000,weights=),main = "London Wifi Density")
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/Documents/GitHub/GIS/Assessment Part 1")
library(spatstat)
library(sp)
library(rgeos)
library(maptools)
library(GISTools)
library(tmap)
library(tmaptools)
# load Borough data
BoroughMap <- read_shape('LondonBorough/LondonBouroughs.shp',as.sf=FALSE)
summary(BoroughMap)
BNG = "+init=epsg:27700"
BoroughMapBNG <- spTransform(BoroughMap,BNG)
setwd("D:/Documents/GitHub/GIS/Assessment Part 1")
library(spatstat)
library(sp)
library(rgeos)
library(maptools)
library(GISTools)
library(tmap)
library(tmaptools)
# load Borough data
BoroughMap <- read_shape('LondonBorough/LondonBouroughs.shp',as.sf=FALSE)
BNG = "+init=epsg:27700"
BoroughMapBNG <- spTransform(BoroughMap,BNG)
# load wifi data
LondonWifi <- read.csv("London_Wifi.csv", header = T, sep = ",")
coordinates(LondonWifi) <- ~latitude + longitude
proj4string(LondonWifi) = CRS("+init=epsg:4326")
WifiBNG <- spTransform(LondonWifi,BNG)
WifiBNG <- remove.duplicates(WifiBNG)
WifiBNG <- WifiBNG[BoroughMapBNG,]
# quick plot
tmap_mode("view")
tm_shape(BoroughMapBNG) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(WifiBNG) +
tm_dots(col = "blue")
window <- as.owin(BoroughMapBNG)
Wifi.ppp <- ppp(x=WifiBNG@coords[,1],y=WifiBNG@coords[,2],window=window)
plot(Wifi.ppp,pch=16,cex=0.5, main="London Wifi")
plot(density(Wifi.ppp,sigma = 2000,weights=),main = "London Wifi Density")
plot(density(Wifi.ppp,sigma = 2000,weights=),main = "London Wifi Density (2014)")
setwd("D:/Documents/GitHub/GIS/Assessment Part 1")
library(spatstat)
library(sp)
library(rgeos)
library(maptools)
library(GISTools)
library(tmap)
library(geojsonio)
library(tmaptools)
# load Borough data
BoroughMap <- read_shape('LondonBorough/LondonBouroughs.shp',as.sf=FALSE)
summary(BoroughMap)
BNG = "+init=epsg:27700"
BoroughMapBNG <- spTransform(BoroughMap,BNG)
# load wifi data
LondonWifi <- read.csv("London_Wifi.csv", header = T, sep = ",")
coordinates(LondonWifi) <- ~latitude + longitude
proj4string(LondonWifi) = CRS("+init=epsg:4326")
WifiBNG <- spTransform(LondonWifi,BNG)
WifiBNG <- remove.duplicates(WifiBNG)
WifiBNG <- WifiBNG[BoroughMapBNG,]
# now set a window as the borough boundary
window <- as.owin(BoroughMapBNG)
plot(window)
# create a point pattern (ppp) object.
Wifi.ppp <- ppp(x=WifiBNG@coords[,1],y=WifiBNG@coords[,2],window=window)
plot(Wifi.ppp,pch=16,cex=0.5, main="London Wifi")
plot(density(Wifi.ppp,sigma = 2000,weights=),main = "London Wifi Density")
plot(Wifi.ppp,pch=16,cex=0.5, main="London Wifi")
tm_shape(BoroughMapBNG) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(WifiBNG) +
tm_dots(col = "blue")
plot(density(Wifi.ppp,sigma = 2000,weights=),main = "London Wifi Density")
